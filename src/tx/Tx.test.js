import { deepEqual, strict, strictEqual, throws } from "node:assert"
import { describe, it } from "node:test"
import { bytesToHex, hexToBytes } from "@helios-lang/codec-utils"
import { makeValue } from "../money/index.js"
import { makeAddress } from "../address/index.js"
import { BABBAGE_NETWORK_PARAMS } from "../params/index.js"
import { calcRefScriptsFee, decodeTx } from "./Tx.js"
import { makeTxOutput } from "./TxOutput.js"
import { decodeTxInput, makeTxInput } from "./TxInput.js"

/**
 * @import { TxInput, TxOutputId } from "../index.js"
 */

describe(`basic Tx`, () => {
    /**
     * send 10 tAda on preview net from wallet1 to wallet 2
     * (input is 10000 tAda, change is 9990 tAda minus fees)
     * wallet1 address: addr_test1vzzcg26lxj3twnnx889lrn60pqn0z3km2yahhsz0fvpyxdcj5qp8w
     * wallet2 address: addr_test1vqzhgmkqsyyzxthk7vzxet4283wx8wwygu9nq0v94mdldxs0d56ku
     * input utxo: d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83#0
     * command: cardano-cli transaction build --tx-in d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83#0 --tx-out addr_test1vqzhgmkqsyyzxthk7vzxet4283wx8wwygu9nq0v94mdldxs0d56ku+10000000 --change-address addr_test1vzzcg26lxj3twnnx889lrn60pqn0z3km2yahhsz0fvpyxdcj5qp8w --testnet-magic 2 --out-file /data/preview/transactions/202209042119.tx --babbage-era --cddl-format
     */
    const unsignedHex =
        "84a30081825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000182a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b024337011b000000025370c627a200581d6005746ec08108232ef6f3046caeaa3c5c63b9c4470b303d85aedbf69a011a00989680021a00028759a0f5f6"
    const signedHex =
        "84a30081825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000182a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b024337011b000000025370c627a200581d6005746ec08108232ef6f3046caeaa3c5c63b9c4470b303d85aedbf69a011a00989680021a00028759a10081825820a0e006bbd52e9db2dcd904e90c335212d2968fcae92ee9dd01204543c314359b584073afc3d75355883cd9a83140ed6480354578148f861f905d65a75b773d004eca5869f7f2a580c6d9cc7d54da3b307aa6cb1b8d4eb57603e37eff83ca56ec620cf5f6"

    const unsigned = decodeTx(unsignedHex)
    const signed = decodeTx(signedHex)

    const params = BABBAGE_NETWORK_PARAMS()

    it("unsigned tx contains a single input", () => {
        strictEqual(unsigned.body.inputs.length, 1)
    })

    it("unsigned tx validateSignatures fails", () => {
        throws(() => unsigned.validateSignatures())
    })

    it("signed tx validateSignatures fails (not yet recovered)", () => {
        throws(() => signed.validateSignatures())
    })

    it("unsigned fails regular validations (not yet recovered)", () => {
        throws(() => unsigned.validate(params))
    })

    it("signed fails regular validations (not yet recovered)", () => {
        throws(() => signed.validate(params))
    })

    it("minted value is zero", () => {
        strictEqual(unsigned.body.minted.isZero(), true)
    })

    it("unsigned.toCbor() should give exactly the same as original encoding", () => {
        strictEqual(bytesToHex(unsigned.toCbor()), unsignedHex)
    })

    it("signed.toCbor() should give exactly the same as original encoding", () => {
        strictEqual(bytesToHex(signed.toCbor()), signedHex)
    })

    it("signed size should be equal to original encoding size", () => {
        strictEqual(signed.calcSize(), hexToBytes(signedHex).length)
    })

    it("fee is larger or equal to min calculated fee", () => {
        const calculatedFee = signed.calcMinFee(params)
        strictEqual(signed.body.fee >= calculatedFee, true)
    })

    it("signed tx id is equal to unsigned tx id", () => {
        deepEqual(signed.id().bytes, unsigned.id().bytes)
    })

    it("recovered signed doesn't fail regular validations", async () => {
        await signed.recover({
            getUtxo: async (id) =>
                makeTxInput(
                    id,
                    makeTxOutput(
                        makeAddress(
                            "addr_test1vzzcg26lxj3twnnx889lrn60pqn0z3km2yahhsz0fvpyxdcj5qp8w"
                        ),
                        makeValue(10_000_000_000n)
                    )
                )
        })
        signed.validate(params)
    })
})

/**
 * The Txs in the following testVector were generated using the cardano-cli
 * This testvector can be used to check round-trip encoding
 * @type {{txHex: string}[]}
 */
const testVector = [
    {
        txHex: "84a60081825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000d81825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000182a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b024337011b0000000253eaa6cca200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b02433701821a001e8480a1581c0b61cc751e9512fef62362f00e6db61e70d719a567c6d4eb68095957a14001021a0002b8b409a1581c0b61cc751e9512fef62362f00e6db61e70d719a567c6d4eb68095957a140010b5820af267b4418b11a9faa827f80301849ec4bd4565dbd95bae23f73918444eab395a206815453010000322233335734600693124c4c931251010581840100182a821909611a00094d78f5f6"
    },
    {
        txHex: "84a60081825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000d81825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000182a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b024337011b0000000253eaa985a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b02433701821a001e8480a1581c919d4c2c9455016289341b1a14dedf697687af31751170d56a31466ea14001021a0002b5fb09a1581c919d4c2c9455016289341b1a14dedf697687af31751170d56a31466ea140010b5820686829109fc5e6342d9223537b91f804107c4dbfa8ba3288f80657be843acd51a2068147460100002249810581840100182a821903201a0002754cf5f6"
    },
    {
        txHex: "84a60081825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000d81825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000182a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b024337011b0000000253eaa6cca200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b02433701821a001e8480a1581c0b61cc751e9512fef62362f00e6db61e70d719a567c6d4eb68095957a14001021a0002b8b409a1581c0b61cc751e9512fef62362f00e6db61e70d719a567c6d4eb68095957a140010b5820af267b4418b11a9faa827f80301849ec4bd4565dbd95bae23f73918444eab395a30081825820a0e006bbd52e9db2dcd904e90c335212d2968fcae92ee9dd01204543c314359b5840684649bbe18d47cc58963877e777da9c7dab6206b4833c676f6301d974418b574f0d169723d7cedbd33e2cbcc07fac4a8cf32769816f8dc3153f5bdf6e510c0406815453010000322233335734600693124c4c931251010581840100182a821909611a00094d78f5f6"
    },
    {
        txHex: "84a60081825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000d81825820d4b22d33611fb2b3764080cb349b3f12d353aef1d4319ee33e44594bbebe5e83000182a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b024337011b0000000253eaa985a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b02433701821a001e8480a1581c919d4c2c9455016289341b1a14dedf697687af31751170d56a31466ea14001021a0002b5fb09a1581c919d4c2c9455016289341b1a14dedf697687af31751170d56a31466ea140010b5820686829109fc5e6342d9223537b91f804107c4dbfa8ba3288f80657be843acd51a30081825820a0e006bbd52e9db2dcd904e90c335212d2968fcae92ee9dd01204543c314359b58409b4267e7691d160414f774f82942f08bbc3c64a19259a09b92350fe11ced5f73b64d99aa05f70cb68c730dc0d6ae718f739e5c2932eb843f2a9dcd69ff3c160c068147460100002249810581840100182a821903201a0002754cf5f6"
    },
    {
        txHex: "84a400818258205d4bc6456f3bc6ac9f0c36ac25b0a4a9c2d793aaa5344355fcd2c8f647f2b55c000d818258205d4bc6456f3bc6ac9f0c36ac25b0a4a9c2d793aaa5344355fcd2c8f647f2b55c000182a200581d6085842b5f34a2b74e6639cbf1cf4f0826f146db513b7bc04f4b024337011b0000000253c6daafa300581d7052c6af0c9b744b4eecce838538a52ceb155038b3de68e2bb2fa8fc37011a001e8480028201d81842182a021a0002a09da0f5f6"
    }
]

describe("Tx.calcSize()", () => {
    const params = BABBAGE_NETWORK_PARAMS()

    testVector.forEach((t, i) => {
        it(`test tx ${i + 1}`, () => {
            const tx = decodeTx(t.txHex)

            strictEqual(tx.calcMinFee(params), tx.body.fee)
        })
    })
})

describe("calcRefScriptsFee", () => {
    it("constant fee per byte for growth factor equal to 1", () => {
        const size = 18754781231n
        const fee = calcRefScriptsFee(size, 15, 25600n, 1)
        strictEqual(fee, 15n * size)
    })

    it("equals 0 for [size=0, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(0n, 15, 25600n, 1.5), 0n)
    })

    it("equals 384000 for [size=25600, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(25600n, 15, 25600n, 1.5), 384000n)
    })

    it("equals 960000 for [size=2*25600, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(2n * 25600n, 15, 25600n, 1.5), 960000n)
    })

    it("equals 1824000 for [size=3*25600, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(3n * 25600n, 15, 25600n, 1.5), 1824000n)
    })

    it("equals 3120000 for [size=4*25600, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(4n * 25600n, 15, 25600n, 1.5), 3120000n)
    })

    it("equals 5064000 for [size=5*25600, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(5n * 25600n, 15, 25600n, 1.5), 5064000n)
    })

    it("equals 7980000 for [size=6*25600, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(6n * 25600n, 15, 25600n, 1.5), 7980000n)
    })

    it("equals 12354000 for [size=7*25600, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(7n * 25600n, 15, 25600n, 1.5), 12354000n)
    })

    it("equals 18915000 for [size=8*25600, feePerByte=15, growthIncrement=25600, growthFactor=1.5]", () => {
        strictEqual(calcRefScriptsFee(8n * 25600n, 15, 25600n, 1.5), 18915000n)
    })
})

describe("decodeTx", () => {
    it("works for with both signatures and inputs encoded as sets, keeping track encoding to ensure TxId matches", () => {
        const txHex =
            "84a300d9010281825820cdf17a9d7eeb9aa1d5c4ec2a9727305e197f233348e8441932a0ef0fbe539f6b181c0181825839000033c89bf0cf9d946ebd44d69384d50e8372566472f2b9683243aaea5a0987ee3ec775d90cb16851a5f3cc9d8b03bd6492329e89368442291b00000002540be400021a00030d40a100d901028182582045a35a111726f809cf2c33980ca06e45d29db1b06153c54e6eaafb6e4abfb2e958409f416a4620245a49d40599a473c98616fc6b6680a11bd136e181f576ebd2745ea15b0270b8baefce959949f9453ba25822262ef24bcfea7a80d812eedcb5f405f5f6"

        const tx = decodeTx(txHex)

        strictEqual(
            tx.id().toHex(),
            "2b5395c8417739ecf6a8ce447c28f4a027951673ca8fbf6b8b9d77d99715b4a6"
        )
    })
})

describe("decode and validate tx with UplcProgramV3 ref scripts", () => {
    const txHex =
        "84aa00828258206b33f115d11dbced0859a43a3da43e16a7f452c9caed348da55393ade2dbed7b01825820cf6a3f68140328366e4a35ec6520d78a3a95ac8485b2d1fca6c98d605f181073030184a300581d710291ae7aebaf064b785542093c2b13169effb34462301e68d4b44f4301821a0014c828a2581c0291ae7aebaf064b785542093c2b13169effb34462301e68d4b44f43a14653484950323101581c3babcffc6102ec25ced40e1a24fba20371925c46f0299b2b9456360ea1444655454c05028201d8185820d8799f181b181b465348495032314750494c4f5432311b00000198a3d24438ffa300581d71d55e332cd46d2abfe24dfa0558c2dedd0114d00424352eb807aac13701821b00000002554c5340a1581cdb0d968cda2cc636b28c0f377e66691a065b8004e57be5129aeef822a1446175746801028201d8185823d8799f16581c0291ae7aebaf064b785542093c2b13169effb34462301e68d4b44f43ff825839012b49e4dd3fb7051e46cd4e3042888ea081cb322cea90bcb72a56d30f4f7d22c908d38fba4677cdd2517127283a14fe9ae29316daf5c2a229821a00118f32a1581c0291ae7aebaf064b785542093c2b13169effb34462301e68d4b44f43a14750494c4f54323101825839012b49e4dd3fb7051e46cd4e3042888ea081cb322cea90bcb72a56d30f4f7d22c908d38fba4677cdd2517127283a14fe9ae29316daf5c2a2291a03c4e315021a0007c075031a09bf3f5409a2581c0291ae7aebaf064b785542093c2b13169effb34462301e68d4b44f43a246534849503231014750494c4f54323101581c3babcffc6102ec25ced40e1a24fba20371925c46f0299b2b9456360ea1444655454c050b5820cb4a2da51e257fcaa6bea85e5d6f81896287f5f81254d2171cde6992728c44880d81825820cf6a3f68140328366e4a35ec6520d78a3a95ac8485b2d1fca6c98d605f1810730310825839012b49e4dd3fb7051e46cd4e3042888ea081cb322cea90bcb72a56d30f4f7d22c908d38fba4677cdd2517127283a14fe9ae29316daf5c2a2291a03f69c74111a000ba0b012838258203d308c0f3deb1eff764cbb765452c53d30704748681d7acd61c7775aeb8a8e46018258203d308c0f3deb1eff764cbb765452c53d30704748681d7acd61c7775aeb8a8e46028258203d308c0f3deb1eff764cbb765452c53d30704748681d7acd61c7775aeb8a8e4600a200d90102818258205e3c43c5f0fe722abec573ca498b448a674104907c8f979de9ffa2eff614dfd65840cd8a3ea1c8823a1c7b3aaf2a77013d2db65ea04577f86e4bfa83a870789f0d0be642ec6d12e98e0a3ebc1bf551912aea6f206495c6452e2c35cd00782efd8e030583840000d87980821a0005ba1e1a0765eea6840100d87980821a0001a2d71a022e5bfb840101d87980821a0001cb931a0261f4b5f5f6"

    const tx = decodeTx(txHex)

    it("has expected id", () => {
        strictEqual(
            tx.id().toHex(),
            "bbe5c251d13317afbf1f2615111bac1b07ed5c1b791e58e78adb3a517b945162"
        )
    })

    console.log(JSON.stringify(tx.dump(), undefined, 2))

    const utxos = {
        "3d308c0f3deb1eff764cbb765452c53d30704748681d7acd61c7775aeb8a8e46#0":
            decodeTxInput(
                ""
            ),
        "3d308c0f3deb1eff764cbb765452c53d30704748681d7acd61c7775aeb8a8e46#1":
            decodeTxInput(
                "828258203d308c0f3deb1eff764cbb765452c53d30704748681d7acd61c7775aeb8a8e4601a400581d7177799e0f07f377c76676fe9232b9b0bc57ca92c56132817c1ba06d0b011a010178b2028201d8185873d87a9f581c3babcffc6102ec25ced40e1a24fba20371925c46f0299b2b9456360e581cd55e332cd46d2abfe24dfa0558c2dedd0114d00424352eb807aac137d8799f581cdb0d968cda2cc636b28c0f377e66691a065b8004e57be5129aeef8224461757468ffd8799f011a00b89200ff0501ff03d818590e048202590dff590dfc01010033333332323232323232232232222322322533300c3232323232323232323232323232325323233301d300800c132332232323253330233007001132323232533302a302d00200616375a605600260560046eb4c0a4004c094dd500a0a999811980700089919299981418158010020b1bad3029001302537540282a66604660060022a66604c604a6ea80500085854ccc08ccdc3a400c0022a66604c604a6ea80500085858c08cdd500989919191919191919192999815180718159baa00b1323232323232323232323232325333037301b303837540022646464a666074603c60766ea80044c8c94ccc0f0c09cc0f4dd50008991919191919191919299982298148030991991192999824981a18251baa00113232533304b3036304c3754002264646464646464a6660aa60b000426464646464a6660ae606e60b06ea80044c94ccc160c10cc164dd500209980a000899191919299982e00f8a99982e00f0a99982e0070a99982e0068a99982e0018a99982e00108008a5014a029405280a5014a066ebcdd301a1ba632533305c304000114bd6f7b6300991919800800a5eb7bdb180894ccc1880044cc18ccdd81ba905d374c00697adef6c601323332225333063337200c20062660ce66ec0dd48309ba6007005153330633371e0c20062660ce66ec0dd48309ba6007001133067337606ea400cdd3001198030030009bae3061001375660c400260cc00460c8002646600200297adef6c6022533306100113306233760980105444655454c00375000697adef6c601323332225333062337209101044655454c0000313306633760980105444655454c00375000e00a2a6660c466e3d221044655454c0000313306633760980105444655454c00375000e0022660cc66ec0dd48019ba800233006006001375c60c00026eb4c184004c194008c18c004c09c038cdd79ba6301a005374c6034666602e6eacc104c170dd51820982e1baa020058489044655454c00302600d53330593375e608c660ba6ea0cdc00150099982e9ba833700052024660ba6ea40a0cc174dd48139982e9800982d9baa0024bd70001099b8900e375a600260b66ea80085281182f182f982f982f982f8008b182e182c9baa00116305b003375660b400660b260b400260b200260b060a86ea800458c158004cc0e40a88cdd7981b98299baa001303730533754607060a66ea805ccdc480e003192999827981998281baa001132323371266e08dd6982b0011bad30563057001337046eb4c158004dd6982b182b80118291baa0193051375460a860a26ea800458cc064008cdc080180299b820010433233700600200e600200c4a66609a66e200052000130190011001375a60a0609a6ea800458c0c0c130dd5181898261baa022375a609c60966ea800458c0b8c128dd5181718251baa020375a60960026eb4c12cc130004c11cdd501b0a9998229818003099191929998259827001099191919192999826981698271baa001132533304e3039304f37540082660140022646464a6660a20282a6660a20262a6660a20062a6660a2004200229405280a5014a064a6660a2606c018266e2400412452819981d002827245044655454c003375e6e98c03c010dd3180799998061bab303630513754606c60a26ea80541352201044655454c0000a3375e0020482c60a4609e6ea800458c14400cdd59828001982798280009827800982718251baa00116304c0013302f02023375e605a60926ea8004c0b4c124dd5181718249baa00d375a6094608e6ea80d854ccc114c0940184c8c94ccc128c1340084c8c94ccc12403054ccc12402c54ccc12400840045280a5014a066ebcdd39981b00f99ba548008cc130c0b8c128dd500125eb80dd39982626103d87a80004bd7018161998189bab302e30493754605c60926ea8004dd7181698249baa042375c605c60926ea810858c12c004cc0b80808c94ccc11cc0acc120dd50008a5013371e6eb8c130c124dd5000821981618241baa302c30483754605a60906ea80044c8c94ccc11c02854ccc11c02454ccc11c00840045280a5014a066e1cccc0c007c111221044655454c0030123330303756605a60906ea8c0b4c120dd5006022245044655454c003371066605e03c0120289000112999823181518239baa0021323232323232323232325333053305600200b16375a60a800260a80046eb8c148004c148008dd7182800098280011bad304e001304e002375a609800260906ea80085888894ccc11cc0ac00440104c8c8cc004004018894ccc1340044cc138cdd81ba9006374c00697adef6c60132333222533304e337200140062660a466ec0dd48051ba60070051533304e3371e014006264a66609e606660a06ea80044cc14ccdd81ba900b305430513754002004200464a66609ea6660a400229445280a6103d87a80001303c33053374c00297ae03233001001003225333053001133054337606ea402cdd400525eb7bdb1804c8ccc8894ccc150cdc800780189982c19bb0375201e6ea003801454ccc150cdc7807801899299982a981c982b1baa001133059337606ea4040c168c15cdd5000801080119299982a981c8008a6103d87a80001304233059375000297ae03370000401c2660b066ec0dd48019ba800233006006001375c60a40026eb4c14c004c15c008c1540044cc148cdd81ba9003374c0046600c00c0026eb8c130004dd5982680098288011827800991900118030009982599bb037520046ea00052f5bded8c0600200244a66608c00229309929998238008a4c264666444a66609066e4000c0084cc01c01ccc13001000458dd7182318250019bae3046001304b002304900130490012323300100100222533304600114bd6f7b630099199911299982399b91488100003153330473371e9101000031001100513304b337606ea400cdd3001198030030009bae30450013756608c0026094004609000260806ea80c0c0a4cc8c004004894ccc10c0045200013370090011980100118230009981380c9192999820181218209baa00114a0266e3cdd7182298211baa001004302530413754604a60826ea8c098c104dd5000a99981e9810981f1baa33005018232330010013233001001330283756604e60846ea8c09cc108dd50018021129998220008a5eb804cc114c108c118004cc008008c11c004894ccc10c00452809991299982119b8f00201014a22660080080026eb8c114004c1180045288a50375c6082607c6ea800458c084c0f4dd51810981e9baa3022303d3754002607e60786ea800458cc0040508cdd79810181e1baa00101c22323300100100322533303f00114c0103d87a800013322533303e30050021302b330420024bd7009980200200098208009821000981e181c9baa0011633001375a603860706ea80c0dd6980e981c1baa030225333037301b00114c103d87a800015333037337100029000098121981d98121981d9ba830030023303b3750600600297ae04bd70098121981d98121981d9ba80023303b375000297ae04bd701b8148000dd6981c181c8029bae3037004375c606c0086eb4c0d4010dd6981a002181a0009819800981900098169baa001302f302c37540162c6eacc0b8c0bcc0bc014c0b4010dd598160021bac302b00437586054008605460546054002605260520026050605000260466ea804cdc3a4008604600260466048002603e6ea803454ccc074c0040304c8c8c94ccc080c01000454ccc08cc088dd50088010b0a99981018058008a99981198111baa01100216163020375402026464646464a666046600e60486ea80504c8c94ccc0a0c0ac0084c94ccc098c02cccc040dd5980698141baa300d302837540046eb8c030c0a0dd50109bae300d3028375404220022940cdd79ba7330130043374a900119814980598139baa0014bd701ba7330294c103d87980004bd700b1814800998060019192999812980498131baa00114a0266e3cdd7181518139baa001021300a302637546014604c6ea8c02cc098dd500089919299981418158010a99981299b8748004dd698138008a51161630290013300b0010063756604e0066eacc098c09cc09cc09cc09cc09c008dd61812801181298129812981280098101baa010375c6044603e6ea803458dc3a40006e212000230200012301f30200012232533301b3006301c3754002297adef6c60137566040603a6ea8004cc01800800488c8cc00400400c894ccc07800452f5c026644a66603a600a004266042004660080080022660080080026040002604200244464a666034600a60366ea8004520001375a603e60386ea8004c94ccc068c014c06cdd50008a60103d87a80001323300100137566040603a6ea8008894ccc07c004530103d87a80001323332225333020337220100062a66604066e3c02000c4c034cc090dd400125eb80530103d87a8000133006006001375c603c0026eb4c07c004c08c008c084004cc01400c008dc3a400444646600200200644a666036002298103d87a8000132333222533301c3372200e0062a66603866e3c01c00c4c024cc080dd300125eb80530103d87a8000133006006001375c60340026eacc06c004c07c008c074004dd2a400044646600200200644a666032002297ae0132333222533301a3375e00e00626603c0046600c00c00226600c00c00260300026032002603a004603600260246ea8004c054c05800cc050008c04c008c04c004c038dd50008a4c26cac6eb4004dd68009bae001375c002ae6955ceaab9e5573eae815d0aba24c011e581c3babcffc6102ec25ced40e1a24fba20371925c46f0299b2b9456360e004c011e581cd55e332cd46d2abfe24dfa0558c2dedd0114d00424352eb807aac137004c0127d8799f581cdb0d968cda2cc636b28c0f377e66691a065b8004e57be5129aeef8224461757468ff004c010ad8799f011a00b89200ff004c010105004c0101010001"
            ),
        "3d308c0f3deb1eff764cbb765452c53d30704748681d7acd61c7775aeb8a8e46#2":
            decodeTxInput(
                "828258203d308c0f3deb1eff764cbb765452c53d30704748681d7acd61c7775aeb8a8e4602a400581d7177799e0f07f377c76676fe9232b9b0bc57ca92c56132817c1ba06d0b011a00cd62a2028201d818582bd87b9fd8799f581cdb0d968cda2cc636b28c0f377e66691a065b8004e57be5129aeef8224461757468ffff03d818590b348202590b2f590b2c0101003323232323232322253330033232323232323232323232323232325323232333015300900d13233223232533301a300800113232533301f302200200416375a604000260386ea805054ccc068c03800454ccc074c070dd500a0010b0b180d1baa013132323232323232323232533302230103023375400226464a6660486030604a6ea80044c8c94ccc098c050c09cdd50100991919192999816981800109919191919299919818180098189baa002132533303130253032375400a2a666062603e60646ea80044c8c8c8c8c8c94ccc0e8c0f40084c8c8c8c94ccc0f8c1040084c8c8c8c8c94ccc100c044c104dd50008992999820981a98211baa004132325333043303130443754006264646464646464646464a6660a060a6004264646464a6660a20342a6660a20322a6660a20202a6660a201e2a6660a20082a6660a20062a6660a2004200229405280a5014a029405280a50302133230010012253330550011480004cdc0240046600400460b00026605206846058608260a66ea8c10cc14cdd500099baf374c062980101a00032533304f304330503754002266e2400cdd6982a18289baa00116303e30503754607c60a06ea80bccdd79ba7330513750036660a26ea00652f5c06e9ccc144dd4004998289ba80074bd700b1bad30510013051002375c609e002609e0046eb8c134004c134008dd6982580098258011bad3049001304537540062c66ebcdd39981c811181799823181918221baa0084bd701ba733046302f33046375003897ae04bd70191929998231824801099299982219b88371a00400229404cdc7999b8c48000004009221045348495000371a910104534849500016375c608e00264660020026606600801844a66608c002297ae013304730443048001330020023049001163045304237540022c60880066eacc10c00cc108c10c004c108004c104c0f4dd51816981e9baa00116303f0013301201d2323232533303d3031303e37540022a66607a6062607c6ea8c108c10c0084cdc79bae3042303f375400200e0060066082002607a6ea8c0acc0f4dd51816981e9baa00214a0646464646464646464a66608266ebcdd31980100a0041ba633330033300200900801d489044655454c0033702900000d88008a50323300100101422533304500114a2264666444646600200200644a6660960022006264664464a6660986600c00c60a400a266e2400800452819981f0098040011bae304a001375a6096002609a0026eb8c110004dd59822800998018019824801182380091191980080098038019129998230008a5eb7bdb1804cc894ccc114c8cc004004018894ccc12800452809991299982499b8f00200614a22660080080026eb8c130004c1340044c8cc004004cc0dc01c00c894ccc128004400c4c8cccc028cc00c00cc138008014dd718248009bad304a001304c0011001375c60900026600400460920024444a66608460600022008264646600200200c44a66609000226609266ec0dd48031ba60034bd6f7b630099199911299982499b9000a00313304d337606ea4028dd30038028a99982499b8f00a003132533304a3038304b375400226609c66ec0dd4805982798261baa001002100232533304a533304d00114a22940530103d87a8000130403304e374c00297ae0323300100100322533304e00113304f337606ea402cdd400525eb7bdb1804c8ccc8894ccc13ccdc800780189982999bb0375201e6ea003801454ccc13ccdc78078018992999828181f18289baa001133054337606ea4040c154c148dd50008010801192999828181f0008a6103d87a80001304633054375000297ae03370000401c2660a666ec0dd48019ba800233006006001375c609a0026eb4c138004c148008c1400044cc134cdd81ba9003374c0046600c00c0026eb8c11c004dd5982400098260011825000991900118030009982319bb037520046ea00052f5bded8c0600200244a66608200229309929998210008a4c264666444a66608666e4000c0084cc01c01ccc11c01000458dd7182098228019bae3041001304600230440013044001300100122533303f00114bd70099820181e98208009980100118210009981ea6010140003303d3029303b37540706607a6ea40552f5c06eacc0a8c0e8dd51815181d1baa016533303730253038375400e2646464646464a6660806086004266ebcc0cccc1040352f5c004c2c6eb8c104004c104008dd6981f800981f8011bad303d0013039375400e2c2c6eb8c0ec004c0ec008dd6981c800981c8011bad3037001303337540022c2c606a60646ea8008dc3a40082c60660066eacc0c800cc0c4c0c8004c0c4004c0c0c0b0dd50008b181700099800805919baf3019302b3754002603260566ea8c06cc0acdd50039119198008008019129998170008a5eb804cc894ccc0b4c0140084cc0c4008cc0100100044cc010010004c0c0004c0c4004dd6981598141baa020153330263014302737546602a0144a66604e66604e6004602e60526ea8c064c0a4dd5000a504a2260266660346eacc064c0a4dd5180c98149baa001375c602e60526ea8098dd7180c98149baa02614a0294452812999813180a18139baa30163028375400229405289bae3029302637540022c6026604a6ea8c04cc094dd5180a98129baa0013027302437540022c6602000a466ebcc048c090dd50008061bab3025302630260053024004375660460086eb0c088010dd6181080218109810981080098101810000980f980f800980d1baa013301b001301b301c0013017375401c2a66602a600601a2646464a666030600c0022a66603660346ea80480085854ccc060c03000454ccc06cc068dd50090010b0b180c1baa0111323232323232533301f3022002132533301d3371e9101044655454c00375c603c0042a66603a6016603c6ea805c4c94ccc078c030c07cdd5000899192999810180600208008a50325333020300e3021375400229444c94ccc084ccc084cdc79bae3026302337540040189412888008a503375e6e9ccc05c01cc034cc090c040c088dd500125eb80dd399812260103d87980004bd70180798109baa300f30213754602260426ea8004c08cc080dd50008b19806002918051998089bab301030203754602060406ea8004dd7180718101baa01d375c602060406ea80744cdc4000a40002c6eb4c07800458c080004cc02cdd5980f8018029bab301e301f301f301f301f301f0023758603a004603a603a603a603a00260306ea8044dd7180d180b9baa00e16371090001ba548008dc3a400044646600200200644a666030002298103d87a800013322533301730050021300d3301b0024bd70099802002000980d000980d8009180b00091192999809180318099baa00114bd6f7b63009bab3017301437540026600c00400246028602a00244464a666022600a60246ea8004520001375a602c60266ea8004c94ccc044c014c048dd50008a6103d87a8000132330010013756602e60286ea8008894ccc058004530103d87a80001323332225333017337220100062a66602e66e3c02000c4c034cc06cdd400125eb80530103d87a8000133006006001375c602a0026eb4c058004c068008c060004cc01400c008dc3a400444646600200200644a666024002298103d87a800013233322253330133372200e0062a66602666e3c01c00c4c024cc05cdd300125eb80530103d87a8000133006006001375c60220026eacc048004c058008c050004dd2a400044646600200200644a666020002297ae013233322253330113375e00e00626602a0046600c00c00226600c00c002601e00260200026028004602400260126ea8004c030c03400cc02c008c028008c028004c014dd50008a4c26cacae6955ceaab9e5573eae815d0aba24c127d8799f581cdb0d968cda2cc636b28c0f377e66691a065b8004e57be5129aeef8224461757468ff0001"
            ),
        "6b33f115d11dbced0859a43a3da43e16a7f452c9caed348da55393ade2dbed7b#1":
            decodeTxInput(
                "828258206b33f115d11dbced0859a43a3da43e16a7f452c9caed348da55393ade2dbed7b01a300581d71d55e332cd46d2abfe24dfa0558c2dedd0114d00424352eb807aac13701821b00000002553d1100a1581cdb0d968cda2cc636b28c0f377e66691a065b8004e57be5129aeef822a1446175746801028201d8185823d8799f15581c0291ae7aebaf064b785542093c2b13169effb34462301e68d4b44f43ff"
            ),
        "cf6a3f68140328366e4a35ec6520d78a3a95ac8485b2d1fca6c98d605f181073#3":
            decodeTxInput(
                "82825820cf6a3f68140328366e4a35ec6520d78a3a95ac8485b2d1fca6c98d605f18107303825839012b49e4dd3fb7051e46cd4e3042888ea081cb322cea90bcb72a56d30f4f7d22c908d38fba4677cdd2517127283a14fe9ae29316daf5c2a2291a04023d24"
            )
    }

    it("can restore and validate with known UTXOs", async () => {
        await tx.recover({
            /**
             * @param {TxOutputId} id
             * @returns {Promise<TxInput>}
             */
            getUtxo: async (id) => {
                const utxo = utxos[id.toString()]

                if (!utxo) {
                    throw new Error(`utxo ${id.toString()} not found in cache`)
                }

                return utxo
            }
        })

        const networkParams = JSON.parse(
            '{"collateralUTXO":"f3e13e9b6f0cd49b145493b408a32cc3daa787c21818952f26cbb607e3d333660","collateralPercentage":150,"costModelParamsV1":[100788,420,1,1,1000,173,0,1,1000,59957,4,1,11183,32,201305,8356,4,16000,100,16000,100,16000,100,16000,100,16000,100,16000,100,100,100,16000,100,94375,32,132994,32,61462,4,72010,178,0,1,22151,32,91189,769,4,2,85848,228465,122,0,1,1,1000,42921,4,2,24548,29498,38,1,898148,27279,1,51775,558,1,39184,1000,60594,1,141895,32,83150,32,15299,32,76049,1,13169,4,22100,10,28999,74,1,28999,74,1,43285,552,1,44749,541,1,33852,32,68246,32,72362,32,7243,32,7391,32,11546,32,85848,228465,122,0,1,1,90434,519,0,1,74433,32,85848,228465,122,0,1,1,85848,228465,122,0,1,1,270652,22588,4,1457325,64566,4,20467,1,4,0,141992,32,100788,420,1,1,81663,32,59498,32,20142,32,24588,32,20744,32,25933,32,24623,32,53384111,14333,10],"costModelParamsV2":[100788,420,1,1,1000,173,0,1,1000,59957,4,1,11183,32,201305,8356,4,16000,100,16000,100,16000,100,16000,100,16000,100,16000,100,100,100,16000,100,94375,32,132994,32,61462,4,72010,178,0,1,22151,32,91189,769,4,2,85848,228465,122,0,1,1,1000,42921,4,2,24548,29498,38,1,898148,27279,1,51775,558,1,39184,1000,60594,1,141895,32,83150,32,15299,32,76049,1,13169,4,22100,10,28999,74,1,28999,74,1,43285,552,1,44749,541,1,33852,32,68246,32,72362,32,7243,32,7391,32,11546,32,85848,228465,122,0,1,1,90434,519,0,1,74433,32,85848,228465,122,0,1,1,85848,228465,122,0,1,1,955506,213312,0,2,270652,22588,4,1457325,64566,4,20467,1,4,0,141992,32,100788,420,1,1,81663,32,59498,32,20142,32,24588,32,20744,32,25933,32,24623,32,43053543,10,53384111,14333,10,43574283,26308,10],"costModelParamsV3":[100788,420,1,1,1000,173,0,1,1000,59957,4,1,11183,32,201305,8356,4,16000,100,16000,100,16000,100,16000,100,16000,100,16000,100,100,100,16000,100,94375,32,132994,32,61462,4,72010,178,0,1,22151,32,91189,769,4,2,85848,123203,7305,-900,1716,549,57,85848,0,1,1,1000,42921,4,2,24548,29498,38,1,898148,27279,1,51775,558,1,39184,1000,60594,1,141895,32,83150,32,15299,32,76049,1,13169,4,22100,10,28999,74,1,28999,74,1,43285,552,1,44749,541,1,33852,32,68246,32,72362,32,7243,32,7391,32,11546,32,85848,123203,7305,-900,1716,549,57,85848,0,1,90434,519,0,1,74433,32,85848,123203,7305,-900,1716,549,57,85848,0,1,1,85848,123203,7305,-900,1716,549,57,85848,0,1,955506,213312,0,2,270652,22588,4,1457325,64566,4,20467,1,4,0,141992,32,100788,420,1,1,81663,32,59498,32,20142,32,24588,32,20744,32,25933,32,24623,32,43053543,10,53384111,14333,10,43574283,26308,10,16000,100,16000,100,962335,18,2780678,6,442008,1,52538055,3756,18,267929,18,76433006,8868,18,52948122,18,1995836,36,3227919,12,901022,1,166917843,4307,36,284546,36,158221314,26549,36,74698472,36,333849714,1,254006273,72,2174038,72,2261318,64571,4,207616,8310,4,1293828,28716,63,0,1,1006041,43623,251,0,1,100181,726,719,0,1,100181,726,719,0,1,100181,726,719,0,1,107878,680,0,1,95336,1,281145,18848,0,1,180194,159,1,1,158519,8942,0,1,159378,8813,0,1,107490,3298,1,106057,655,1,1964219,24520,3],"exCpuFeePerUnit":0.0000721,"exMemFeePerUnit":0.0577,"maxCollateralInputs":3,"maxTxExCpu":10000000000,"maxTxExMem":14000000,"maxTxSize":16384,"refScriptsFeePerByte":15,"refTipSlot":163468951,"refTipTime":1755035242000,"secondsPerSlot":1,"stakeAddrDeposit":2000000,"txFeeFixed":155381,"txFeePerByte":44,"utxoDepositPerByte":4310}'
        )

        tx.validate(networkParams)
    })
})
